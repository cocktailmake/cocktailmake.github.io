#+OPTIONS: ^:nil
#+BEGIN_COMMENT
.. title: FFmpeg WASM
.. slug: ffmpeg-wasm
.. date: 2020-11-29 23:11:20 UTC+09:00
.. tags: JavaScript, wasm
.. category: Recording
.. link: 
.. description: We evaluated WebAssembly format of ffmpeg for video transcoding on JavaScript.
.. type: text
.. author: Duc To
.. previewimage: TODO
#+END_COMMENT

* Introduction

FFmpeg WASM is a pure WebAssembly / JavaScript port of FFmpeg. It enables video & audio record, convert and stream right inside browsers.
The main Git repository for it is https://github.com/ffmpegwasm/ffmpeg.wasm

TODO
Describe the motivation why we evaluated and how we would like to integrate this technology into our products.


* Licensing

- @ffmpeg/ffmpeg contains kind of a wrapper to handle the complexity of loading core and calling low-level APIs. It is a small code base and under MIT license.

- @ffmpeg/core following the same licenses as FFmpeg and its external libraries.

* How it works

- The only JavaScript file defined in HTML file is https://unpkg.com/@ffmpeg/ffmpeg@0.9.4/dist/ffmpeg.min.js but actually it is just a wrapper.
- Based on the actual need in our triggered ffmpeg function, the JavaScript will load ffmpeg/core file ffmpeg-core.wasm and its JavaScript file ffmpeg-core.js. The size of ffmpeg-core.wasm at the time of testing is 22MB.
- Sometimes we may need to use the newest version of @ffmpeg/core and we can define it using customized path.

#+BEGIN_SRC javascript
const ffmpeg = createFFmpeg({
  corePath: '../../../src/ffmpeg-core.js',
});
#+END_SRC

- We can re-compile ffmpeg-core by checking build.sh inside https://github.com/ffmpegwasm/ffmpeg.wasm-core repository.

TODO Put the actual source code you demonstrated.

TODO Put some figures such as architecture etc.


* Testing result

- We made 3 test cases converting from H.265 video file, MOV file which recorded from MacOS and a sample MOV file which we get from the internet to MP# format:
  - Convert the H.265 video to mp4. It is successful but the progress takes very long to complete, more than 6 minutes while if we do it with ffmpeg command it is just around 3 minutes. So nearly double the time.
  - Convert admin_sort MOV video, which I think that you recorded it on Mac device to mp4 format. It is failed after few seconds using FFmpeg WASM library but it is successful using ffmpeg command.
  - Convert the MOV video downloaded from the internet to mp4 format. It is successful and the conversion time is quite fast, around 2 minutes.

At the moment of writing this article, FFmpeg WASM is twice slower and unstable, but it is worth monitoring the future progress, and we may use WASM of ImageMagic in the future.
